// ********RoostGPT********
/*
Test generated by RoostGPT for test advancedReportTest using AI Type  and AI Model 

ROOST_METHOD_HASH=U_78cef322c3
ROOST_METHOD_SIG_HASH=U_70ed93df35


*/

// ********RoostGPT********
const U = require('../src/public/javascripts/library/angular.min.js').U;

describe('U function', () => {
  test('should return true for non-null objects', () => {
    expect(U({})).toBe(true);
    expect(U([])).toBe(true);
    expect(U(new Date())).toBe(true);
  });

  test('should return false for null', () => {
    expect(U(null)).toBe(false);
  });

  test('should return false for undefined', () => {
    expect(U(undefined)).toBe(false);
  });

  test('should return false for primitives', () => {
    expect(U(42)).toBe(false);
    expect(U('string')).toBe(false);
    expect(U(true)).toBe(false);
    expect(U(false)).toBe(false);
  });

  test('should return true for functions', () => {
    expect(U(() => {})).toBe(true);
  });

  test('should return true for custom objects', () => {
    class CustomClass {}
    expect(U(new CustomClass())).toBe(true);
  });

  test('should return true for object literals', () => {
    expect(U({ key: 'value' })).toBe(true);
  });

  test('should return true for arrays', () => {
    expect(U([1, 2, 3])).toBe(true);
  });

  test('should return true for RegExp objects', () => {
    expect(U(/regex/)).toBe(true);
  });

  test('should return false for Symbol primitives', () => {
    expect(U(Symbol('symbol'))).toBe(false);
  });

  test('should return true for Symbol objects', () => {
    expect(U(Object(Symbol('symbol')))).toBe(true);
  });
});
