// ********RoostGPT********
/*
Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=productServicesFunction_2b06d2aca5
ROOST_METHOD_SIG_HASH=productServicesFunction_94834b2c27


*/

// ********RoostGPT********
const productServicesFunction = require('./app-service');
const $resource = require('resource-mock');

jest.mock('resource-mock');

describe('Product Services Function', () => {
    beforeEach(() => {
        $resource.mockClear();
    });

    test('the $resource function has been called', () => {
        productServicesFunction($resource);
        expect($resource).toHaveBeenCalled();
    });

    test('the $resource function has been called with correct parameters', () => {
        const expectedURL = 'http://localhost:3000/api/products/:id';
        const expectedParamDefaults = {};
        const expectedActions = {
            'getAllProducts': { method: 'GET' },
            'deleteProduct': { method: 'DELETE', params: { id : '@id' } },
            'updateProduct': { method: 'PUT', params: { id : '@id' }, data: { title: 'title', description: 'description', price: 'price' }},
            'insertProduct': { method: 'POST', data: { title: 'title', description: 'description', price: 'price' }}
        };

        productServicesFunction($resource);
        
        expect($resource).toHaveBeenCalledWith(expectedURL, expectedParamDefaults, expectedActions);
    });

    test('return value from function', () => {
        const returnValue = productServicesFunction($resource);
        expect(returnValue).toBeInstanceOf(Object);
    });
});
